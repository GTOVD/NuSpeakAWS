# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
    globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Communities
    @model
    @auth(
        rules: [
            # Owner can perform any action on their own Post
            { allow: owner, operations: [create, update, delete, read] }
            # Other signed in users can read everyones posts
            { allow: private, operations: [read] }
            # Non-signed in users (guests) can read everyones posts as well.
            { allow: public, operations: [read] }
        ]
    ) {
    id: ID!
    name: String!
    posts: [Post] @hasMany
}

type Post
    @model
    @auth(
        rules: [
            # Owner can perform any action on their own Post
            { allow: owner, operations: [create, update, delete, read] }
            # Other signed in users can read everyones posts
            { allow: private, operations: [read] }
            # Non-signed in users (guests) can read everyones posts as well.
            { allow: public, operations: [read] }
        ]
    ) {
    id: ID!
    title: String!
    contents: String
    image: String
    upvotes: Int!
    downvotes: Int!
    communities: Communities @belongsTo
    comments: [Comment] @hasMany
}

type Comment
    @model
    @auth(
        rules: [
            # Owner can perform any action on their own Post
            { allow: owner, operations: [create, update, delete, read] }
            # Other signed in users can read everyones posts
            { allow: private, operations: [read] }
            # Non-signed in users (guests) can read everyones posts as well.
            { allow: public, operations: [read] }
        ]
    ) {
    id: ID!
    post: Post @belongsTo
    reply: [Comment] @hasMany
    content: String!
    upvotes: Int!
    downvotes: Int!
}
